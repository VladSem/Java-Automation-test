package com.streambox.fivemodems;


import org.openqa.selenium.By;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;


/**
 * Created by vlad on 4/20/15.
 */
public class ModemConnectionValidator extends AvenirWebDriver {

    private LogModemsWrite logger = new LogModemsWrite();
    private String checkButtonConnected;
    private String checkButtonConnected2;
    private String checkButtonConnected3;
    private String checkButtonConnected4;

    private int time;

    private long tStart;
    private long tEnd;
    private long tDelta;
    private static double elapsedSeconds;

//    private long hours;
//    private long minutes;
//    private long seconds;
//    private String timeString;

    private long start;
    private long elapsed;
    private static String seconds;
    private static String seconds2;

    private static long endTime;


    public void checkIfModemConnected(String pathToModemButtonDetection, String pathToModemLogFile) {

        try {
            checkButtonConnected = driver.findElement(By.xpath(pathToModemButtonDetection)).getText();
            System.out.println(checkButtonConnected);

            tStart = System.currentTimeMillis();
            start = System.currentTimeMillis(); //new


            if (checkButtonConnected.equals("Connected")) {

//                tEnd = System.currentTimeMillis();
//                tDelta = tEnd - tStart;
//                hours = tDelta / 3600;
//                minutes = (tDelta %3600) / 60;
//                seconds = tDelta % 60;
//                timeString = String.format("%02d:%02d:%02d", hours, minutes, seconds);

                elapsed = System.currentTimeMillis() - start;
                DateFormat df = new SimpleDateFormat("HH 'hours', mm 'mins,' ss 'seconds'");
                df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
                seconds = df.format(new Date(elapsed)); //sam dobavil
                //seconds2 = seconds.toString();

                logger.modemsLogs("\r\n\t" + "Modem staus: " + checkButtonConnected + " - It took " +
                        seconds + " seconds" + "     " + "Test passed", pathToModemLogFile);

            } else if (checkButtonConnected.equals("con-phase2")) {

                //checkButtonConnected3 = driver.findElement(By.xpath(pathToModemButtonDetection)).getText();
                int time = 0;
                do {
                    checkButtonConnected3 = driver.findElement(By.xpath(pathToModemButtonDetection)).getText();
                    time += 1;
                    System.out.println(time);
                } while (checkButtonConnected3.equals("Connected"));

                elapsed = System.currentTimeMillis() - start;
                DateFormat df = new SimpleDateFormat("HH 'hours', mm 'mins,' ss 'seconds'");
                df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
                seconds = df.format(new Date(elapsed)); //sam dobavil
                //seconds2 = seconds.toString();
//                tEnd = System.currentTimeMillis();
//                tDelta = tEnd - tStart;
//                hours = tDelta / 3600;
//                minutes = (tDelta %3600) / 60;
//                seconds = tDelta % 60;
//                timeString = String.format("%02d:%02d:%02d", hours, minutes, seconds);;
                //elapsedSeconds = tDelta / 1000.0;
                logger.modemsLogs("\r\n\t" + "Modem staus: " + checkButtonConnected3 + " - It took " +
                        seconds + " seconds" + "     " + "Test passed", pathToModemLogFile);

            } else if (checkButtonConnected.equals("retrying") || checkButtonConnected.equals("connecting")) {

                try {
                    checkButtonConnected4 = driver.findElement(By.xpath(pathToModemButtonDetection)).getText();
                    System.out.println("1: " + checkButtonConnected4);
                    int time = 0;

//                    Dell potom
//                    tEnd = System.currentTimeMillis();
//                    tDelta = tEnd - tStart;
//                    elapsedSeconds = tDelta / 1000;
//                    System.out.println(elapsedSeconds);
                    //tStart = System.currentTimeMillis();

                    start = System.currentTimeMillis();
                    tStart = System.currentTimeMillis();

                    do {
//                    while (checkButtonConnected4.equals("retrying") || checkButtonConnected4.equals("connecting") || elapsedSeconds > 10.0) {

                        checkButtonConnected4 = driver.findElement(By.xpath(pathToModemButtonDetection)).getText();
                        System.out.println(checkButtonConnected4);

//                        long start_time = System.currentTimeMillis();
//                        long wait_time = 5000;
//                        long end_time = start_time + wait_time;
//
//                        while (System.currentTimeMillis() < end_time) {///
//                        }
                        System.out.println(time + ": time(s)");
                        time += 1;

//                        hours = tDelta / 3600;
//                        //minutes = hours % 60;
//                        minutes = (hours % 3600) / 60;
//                        seconds = minutes % 60;
//                        timeString = String.format("%02d:%02d:%02d", seconds, minutes, hours);
//                        System.out.println(timeString);

                        elapsed = System.currentTimeMillis() - start;
                        DateFormat df = new SimpleDateFormat("ss");
                        df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
                        seconds = df.format(new Date(elapsed)); //sam dobavil
                        seconds2 = seconds.toString();
                        System.out.println(seconds);

                        tEnd = System.currentTimeMillis();
                        tDelta = tEnd - tStart;
                        elapsedSeconds = tDelta / 1000;
                        System.out.println(elapsedSeconds);

                    }
                    while (checkButtonConnected4.equals("retrying") || checkButtonConnected4.equals("connecting"));

                    elapsed = System.currentTimeMillis() - start;
                    DateFormat df = new SimpleDateFormat("HH 'hours', mm 'mins,' ss 'seconds'");
                    df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
                    seconds = df.format(new Date(elapsed)); //sam dobavil
                    //seconds2 = seconds.toString();
                    System.out.println(seconds);

                    logger.modemsLogs("\r\n\t" + "Modem staus: " + checkButtonConnected4 + " - It took " +
                            seconds + "     " + "Test passed", pathToModemLogFile);

                } catch (Exception e) {
                    elapsed = System.currentTimeMillis() - start;
                    DateFormat df = new SimpleDateFormat("HH 'hours', mm 'mins,' ss 'seconds'");
                    df.setTimeZone(TimeZone.getTimeZone("GMT+0"));
                    seconds = df.format(new Date(elapsed)); //sam dobavil
                    System.out.println("retrying Error");
                    System.out.println("retrying ... -> " + checkButtonConnected4 + " " + seconds);
                    logger.modemsLogs("\r\n\t" + "Modem staus: " + checkButtonConnected4 + " - It took " +
                            seconds + "     " + "Test failed", pathToModemLogFile);
                }

            } else {
                logger.modemsLogs("\r\n\t" + "Modem status1: " + checkButtonConnected +
                        "                                    " + "Test failed", pathToModemLogFile);
            }
        } catch (Exception e) {
            logger.modemsLogs("\r\n\t" + "Modem status2: " + checkButtonConnected +
                    "                                    " + "Test failed", pathToModemLogFile);
        }
    }

}

